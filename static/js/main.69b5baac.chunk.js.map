{"version":3,"sources":["components/common/LogoImage/index.tsx","app/common/common.selectors.ts","app/game/answer-flags/answer-flags.selectors.ts","app/game/help/help.selectors.ts","app/game/game.selectors.ts","app/app.selectors.ts","components/pages/HomePage/index.tsx","components/pages/GamePage/Question/AnswerButton/index.tsx","components/pages/GamePage/Question/HelpDialog/index.tsx","app/game/game.actions.ts","app/game/game.constants.ts","components/pages/GamePage/Question/index.tsx","components/pages/GamePage/QuestionTree/QuestionTreeEntry/index.tsx","components/pages/GamePage/QuestionTree/index.tsx","app/game/help/help.actions.ts","app/game/help/help.constants.ts","components/pages/GamePage/index.tsx","components/pages/NotFound/index.tsx","components/Router.tsx","components/Layout/index.tsx","app/game/answer-flags/answer-flags.reducer.ts","app/game/answer-flags/answer-flags.constants.ts","app/game/help/help.reducer.ts","app/game/game.reducer.ts","app/app.reducer.ts","app/game/answer-flags/answer-flags.actions.ts","app/common/common.utils.ts","app/game/help/help.utils.ts","app/game/game.utils.ts","app/game/help/help.saga.ts","app/game/game.saga.ts","app/app.saga.ts","app/store.ts","serviceWorker.ts","index.tsx","components/App.tsx","components/common/LogoImage/assets/images/logo.png","components/pages/GamePage/assets/images/phone.svg","components/pages/GamePage/assets/images/people.svg","components/pages/GamePage/assets/images/scale.svg"],"names":["LogoImage","src","logo","alt","className","createSelector","subSelectors","resolver","selector","reselectCreateSelector","hasParams","createSelectorWithParams","wrapSelectors","selectors","wrapper","newSelectors","Object","keys","forEach","key","isSelectorWithParams","isSelectorWithOutParams","wrapSelector","state","params","wrapSelectorWithParams","answerFlagsSelectors","selectCurrentAnswerIsCorrect","currentAnswerIsCorrect","selectCurrentAnswerIsInCorrect","currentAnswerIsInCorrect","selectCurrentAnswerIsIgnored","currentAnswerIsIgnored","helpSelectors","selectHelpAudienceUsed","helpAudienceUsed","used","selectHelpFriendUsed","helpFriendUsed","selectHelpHalfUsed","helpHalfUsed","selectFriendHelp","friendHelp","help","selectAudienceHelp","audienceHelp","selectGameList","games","map","selectCurrentGameId","currentGame","currentGameId","selectCurrentGame","selectCurrentGameNumberOfQuestions","questions","length","selectCurrentQuestionId","currentQuestion","currentQuestionId","selectCurrentQuestion","selectCurrentQuestionNumberOfOptions","options","selectCurrentQuestionOptionId","currentQuestionOption","currentQuestionOptionId","gameSelectors","selectCurrentQuestionOption","questionOptions","selectMessage","message","selectQuestionById","questionId","answerFlags","appSelectors","game","HomePage","history","useHistory","useSelector","handleStartGame","useCallback","gameId","push","id","name","description","onClick","AnswerButton","answer","index","isCorrect","isInCorrect","isIgnored","letter","HelpDialog","isOpen","onClose","friendHelpShown","audienceHelpShown","answers","suggestion","possibility","suggestions","storeGames","type","payload","storeQuestions","storeQuestionOptions","startGame","storeCurrentGame","storeCurrentQuestion","storeCurrentQuestionOption","storeMessage","Question","dispatch","useDispatch","useState","helpDialogOpen","setHelpDialogOpen","useRef","handleAnswer","answerQuestion","handleCloseHelpDialog","current","useEffect","text","QuestionTreeEntry","isActive","useMemo","isForSure","value","QuestionTree","reversedQuestion","slice","reverse","arr","storeHelpAudienceUsed","storeHelpFriendUsed","storeHelpHalfUsed","storeFriendHelp","storeAudienceHelp","GamePage","useParams","handlePlayAgain","handleGoBack","handleGiveUp","handleHalfHelp","handleFriendHelp","handleAudienceHelp","scaleImage","phoneImage","peopleImage","NotFound","Router","path","component","exact","Layout","children","initialState","answerFlagsReducer","combineReducers","action","helpReducer","gameReducer","appReducer","storeCurrentAnswerIsCorrect","storeCurrentAnswerIsInCorrect","storeCurrentAnswerIsIgnored","getRandomNumber","maxNumber","Math","floor","random","getIgnoredAnswers","correct","pickFrom","filter","i","getPossibilityToHit","questionIndex","areAnswersIgnored","possibilityList","lower","difference","qNumber","possibilityWithNoise","getFriendPossibilityToHit","possibilities","getFriendSuggestion","find","getAudiencePossibilityToHit","correctPossibility","remainingPossibility","otherPossibilities","j","getAudienceSuggestions","otherPossibilityIndex","DEFAULT_QUESTION_VALUES","DEFAULT_FRIEND_POSSIBILITIES","DEFAULT_AUDIENCE_POSSIBILITIES","getQuestionIdByIndex","getQuestionIndexById","questionIdMatch","match","getQuestionOptionIdByIndex","questionOptionIndex","getLastSafeQuestionIndexFrom","parseGameDataRaw","gameDataRaw","gameRaw","gameIndex","getGameIdByIndex","friendPossibilities","audiencePossibilities","questionRaw","question","questionOptionRaw","questionOption","getQuestionIndexAndAnswers","useHelpHalf","useHelpFriend","useHelpAudience","helpSaga","select","call","currentQuestionIndex","currentlyIgnoredAnswers","a","helpHalfIsUsed","ignoredAnswers","put","helpFriendIsUsed","helpAudienceIsUsed","take","loadGames","getRandomOptionId","clearHelpInfo","endGame","nextQuestion","calculateWinningByQuestionIndex","giveUpGame","gameSaga","data","numberOfOptions","questionOptionId","numberOfQuestions","safeQuestionIndex","wonSum","safeQuestionId","safeQuestion","delay","lastSafeQuestionIndex","fork","initializeApp","appSaga","createStore","sagaMiddleware","createSagaMiddleware","store","reduxCreateStore","applyMiddleware","run","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.69b5baac.chunk.js","sourcesContent":["import React from 'react';\n\nimport logo from './assets/images/logo.png';\n\nexport const LogoImage = () => (\n  <img\n    src={logo}\n    alt=\"Who Wants To Be A Millionaire\"\n    className=\"cover-image\"\n  />\n);\n","import { createSelector as reselectCreateSelector } from 'reselect';\nimport { ISelector, ISelectorWithParams } from './common.types';\n\n\nexport const createSelector = <TState, TResult>(\n  subSelectors: ((state: TState) => any)[],\n  resolver: (...args: any[]) => TResult,\n): ISelector<TState, TResult> =>\n{\n  const selector = reselectCreateSelector(\n    subSelectors,\n    resolver\n  ) as any;\n\n  selector.hasParams = false;\n\n  return selector as ISelector<TState, TResult>;\n};\n\nexport const createSelectorWithParams = <TState, TParams, TResult>(\n  subSelectors: ((state: TState, params: TParams) => any)[],\n  resolver: (...args: any[]) => TResult,\n): ISelectorWithParams<TState, TParams, TResult> => {\n  const selector = reselectCreateSelector(\n    subSelectors,\n    resolver\n  ) as any;\n\n  selector.hasParams = true;\n\n  return selector as ISelectorWithParams<TState, TParams, TResult>;\n};\n\n\nexport const wrapSelector = <\n  TWrappingState,\n  TWrappedState,\n  TResult\n>(\n  selector: ISelector<TWrappedState, TResult>,\n  wrapper: (state: TWrappingState) => TWrappedState,\n): ISelector<TWrappingState, TResult> =>\n  createSelector<TWrappingState, TResult>(\n    [wrapper],\n    selector,\n  );\n\nexport const wrapSelectorWithParams = <\n  TWrappingState,\n  TWrappedState,\n  TParams,\n  TResult\n>(\n  selector: ISelectorWithParams<TWrappedState, TParams, TResult>,\n  wrapper: (state: TWrappingState) => TWrappedState,\n): ISelectorWithParams<TWrappingState, TParams, TResult> =>\n  createSelectorWithParams<TWrappingState, TParams, TResult>(\n    [\n      wrapper,\n      (state: TWrappingState, params: TParams) => params,\n    ],\n    selector,\n  );\n\nconst isSelectorWithParams = <TState>(\n  selector: ISelector<TState, any> | ISelectorWithParams<TState, any, any>\n): selector is ISelectorWithParams<TState, any, any> =>\n  selector.hasParams;\n\nconst isSelectorWithOutParams = <TState>(\n  selector: ISelector<TState, any> | ISelectorWithParams<TState, any, any>\n): selector is ISelector<TState, any> =>\n  typeof selector === 'function' && !selector.hasParams;\n\nexport const wrapSelectors = <\n  TWrappingState,\n  TWrappedState,\n  TSelectorKeys extends string | number | symbol,\n  TWrappingSelectors extends {\n    [key in TSelectorKeys]: ISelector<TWrappingState, any> |\n      ISelectorWithParams<TWrappingState, any, any> |\n      any\n  },\n  TWrappedSelectors extends {\n    [key in TSelectorKeys]: ISelector<TWrappedState, any> |\n      ISelectorWithParams<TWrappedState, any, any> |\n      any;\n  }\n>(selectors: TWrappedSelectors, wrapper: (state: TWrappingState) => TWrappedState): TWrappingSelectors => {\n  const newSelectors: Partial<TWrappingSelectors> = {};\n\n  Object.keys(selectors).forEach((key) => {\n    const selector = selectors[key as TSelectorKeys];\n    if (isSelectorWithParams<TWrappedState>(selector)) {\n      newSelectors[key as TSelectorKeys] = wrapSelectorWithParams(selector, wrapper) as any;\n    } else if (isSelectorWithOutParams<TWrappedState>(selector)) {\n      newSelectors[key as TSelectorKeys] = wrapSelector(selector, wrapper) as any;\n    } else {\n      newSelectors[key as TSelectorKeys] = wrapSelectors(selector, wrapper) as any;\n    }\n  });\n\n  return newSelectors as TWrappingSelectors;\n};\n","import { createSelector } from '../../common/common.selectors';\nimport {\n  IAnswerFlagsSelectors,\n  ISelectCurrentAnswerIsCorrect,\n  ISelectCurrentAnswerIsIgnored,\n  ISelectCurrentAnswerIsInCorrect,\n} from './answer-flags.types';\n\n\nconst selectCurrentAnswerIsCorrect: ISelectCurrentAnswerIsCorrect = createSelector(\n  [(state) => state.currentAnswerIsCorrect],\n  (currentAnswerIsCorrect) => currentAnswerIsCorrect,\n);\n\nconst selectCurrentAnswerIsInCorrect: ISelectCurrentAnswerIsInCorrect = createSelector(\n  [(state) => state.currentAnswerIsInCorrect],\n  (currentAnswerIsInCorrect) => currentAnswerIsInCorrect,\n);\n\nconst selectCurrentAnswerIsIgnored: ISelectCurrentAnswerIsIgnored = createSelector(\n  [(state) => state.currentAnswerIsIgnored],\n  (currentAnswerIsIgnored) => currentAnswerIsIgnored,\n);\n\n\nexport const answerFlagsSelectors: IAnswerFlagsSelectors = {\n  selectCurrentAnswerIsCorrect,\n  selectCurrentAnswerIsInCorrect,\n  selectCurrentAnswerIsIgnored,\n};\n","import { createSelector } from '../../common/common.selectors';\nimport {\n  IHelpSelectors,\n  ISelectAudienceHelp,\n  ISelectFriendHelp,\n  ISelectHelpAudienceUsed,\n  ISelectHelpFriendUsed,\n  ISelectHelpHalfUsed\n} from './help.types';\n\n\nconst selectHelpAudienceUsed: ISelectHelpAudienceUsed = createSelector(\n  [(state) => state.helpAudienceUsed],\n  (used) => used,\n);\n\nconst selectHelpFriendUsed: ISelectHelpFriendUsed = createSelector(\n  [(state) => state.helpFriendUsed],\n  (used) => used,\n);\n\nconst selectHelpHalfUsed: ISelectHelpHalfUsed = createSelector(\n  [(state) => state.helpHalfUsed],\n  (used) => used,\n);\n\nconst selectFriendHelp: ISelectFriendHelp = createSelector(\n  [(state) => state.friendHelp],\n  (help) => help,\n);\n\nconst selectAudienceHelp: ISelectAudienceHelp = createSelector(\n  [(state) => state.audienceHelp],\n  (help) => help,\n)\n\nexport const helpSelectors: IHelpSelectors = {\n  selectHelpAudienceUsed,\n  selectHelpFriendUsed,\n  selectHelpHalfUsed,\n  selectFriendHelp,\n  selectAudienceHelp,\n};\n","import { createSelector, createSelectorWithParams, wrapSelectors } from '../common/common.selectors';\nimport {\n  IGameSelectors, IGameState,\n  ISelectCurrentGame,\n  ISelectCurrentGameId,\n  ISelectCurrentGameNumberOfQuestions,\n  ISelectCurrentQuestion,\n  ISelectCurrentQuestionId,\n  ISelectCurrentQuestionNumberOfOptions,\n  ISelectCurrentQuestionOption,\n  ISelectCurrentQuestionOptionId,\n  ISelectGameList,\n  ISelectMessage,\n  ISelectQuestionById,\n} from './game.types';\n\nimport { IAnswerFlagsSelectors, IAnswerFlagsState } from './answer-flags/answer-flags.types';\nimport { IHelpSelectors, IHelpState } from './help/help.types';\n\nimport { answerFlagsSelectors } from './answer-flags/answer-flags.selectors';\nimport { helpSelectors } from './help/help.selectors';\n\n\nconst selectGameList: ISelectGameList = createSelector(\n  [(state) => state.games],\n  (games) => Object.keys(games).map((key) => games[key])\n);\n\nconst selectCurrentGameId: ISelectCurrentGameId = createSelector(\n  [(state) => state.currentGame],\n  (currentGameId) => currentGameId,\n);\n\nconst selectCurrentGame: ISelectCurrentGame = createSelector(\n  [\n    (state) => state.games,\n    selectCurrentGameId,\n  ],\n  (games, currentGameId) => currentGameId && games[currentGameId],\n);\n\nconst selectCurrentGameNumberOfQuestions: ISelectCurrentGameNumberOfQuestions = createSelector(\n  [selectCurrentGame],\n  (currentGame) => currentGame && currentGame.questions.length,\n);\n\nconst selectCurrentQuestionId: ISelectCurrentQuestionId = createSelector(\n  [(state) => state.currentQuestion],\n  (currentQuestionId) => currentQuestionId,\n);\n\nconst selectCurrentQuestion: ISelectCurrentQuestion = createSelector(\n  [\n    (state) => state.questions,\n    selectCurrentQuestionId,\n  ],\n  (questions, currentQuestionId) => currentQuestionId && questions[currentQuestionId],\n);\n\nconst selectCurrentQuestionNumberOfOptions: ISelectCurrentQuestionNumberOfOptions = createSelector(\n  [selectCurrentQuestion],\n  (currentQuestion) => currentQuestion && currentQuestion.options.length,\n);\n\nconst selectCurrentQuestionOptionId: ISelectCurrentQuestionOptionId = createSelector(\n  [(state) => state.currentQuestionOption],\n  (currentQuestionOptionId) => currentQuestionOptionId,\n);\n\nconst selectCurrentQuestionOption: ISelectCurrentQuestionOption = createSelector(\n  [\n    (state) => state.questionOptions,\n    selectCurrentQuestionOptionId,\n  ],\n  (questionOptions, currentQuestionOption) => currentQuestionOption && questionOptions[currentQuestionOption],\n);\n\nconst selectMessage: ISelectMessage = createSelector(\n  [(state) => state.message],\n  (message) => message,\n);\n\nconst selectQuestionById: ISelectQuestionById = createSelectorWithParams(\n  [\n    (state) => state.questions,\n    (state, questionId) => questionId,\n  ],\n  (questions, questionId) => questions[questionId] || null,\n);\n\nexport const gameSelectors: IGameSelectors = {\n  selectGameList,\n  selectCurrentGameId,\n  selectCurrentGame,\n  selectCurrentGameNumberOfQuestions,\n  selectCurrentQuestionId,\n  selectCurrentQuestion,\n  selectCurrentQuestionNumberOfOptions,\n  selectCurrentQuestionOptionId,\n  selectCurrentQuestionOption,\n  selectMessage,\n  selectQuestionById,\n  answerFlags: wrapSelectors<\n    IGameState,\n    IAnswerFlagsState,\n    keyof IAnswerFlagsSelectors,\n    IAnswerFlagsSelectors<IGameState>,\n    IAnswerFlagsSelectors\n  >(answerFlagsSelectors, (state) => state.answerFlags),\n  help: wrapSelectors<\n    IGameState,\n    IHelpState,\n    keyof IHelpSelectors,\n    IHelpSelectors<IGameState>,\n    IHelpSelectors\n  >(helpSelectors, (state) => state.help),\n};\n","import { wrapSelectors } from './common/common.selectors';\n\nimport { IAppState } from './app.types';\nimport { IGameSelectors, IGameState } from './game/game.types';\n\nimport { gameSelectors } from './game/game.selectors';\n\n\nexport const appSelectors = {\n  game: wrapSelectors<\n    IAppState,\n    IGameState,\n    keyof IGameSelectors,\n    IGameSelectors<IAppState>,\n    IGameSelectors\n  >(\n    gameSelectors,\n    (state) => state.game,\n  ),\n};\n","import React, { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { LogoImage } from '../../common/LogoImage';\n\nimport { appSelectors } from '../../../app/app.selectors';\n\nimport './assets/styles/index.css';\n\n\nexport const HomePage = () => {\n  const history = useHistory();\n  const games = useSelector(appSelectors.game.selectGameList);\n\n  const handleStartGame = useCallback(\n    (gameId: string) => () => history.push(`/game/${gameId}`),\n    [history]\n  );\n\n  return (\n    <div className=\"home-page\">\n      <LogoImage />\n      <div className=\"game-selection\">Select a game: </div>\n      <div className=\"all-games\">\n        {\n          games.map((game) => (\n            <div key={game.id} className=\"game-item\">\n              <div className=\"game-name\">\n                {game.name}\n                <span className=\"game-description\">{game.description ? ` (${game.description})` : ''}</span>\n              </div>\n              <div className=\"default-button\" onClick={handleStartGame(game.id)}>Play</div>\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\n\n\nexport const AnswerButton: FunctionComponent<{\n  answer: string;\n  index: number;\n  isCorrect: boolean;\n  isInCorrect: boolean;\n  isIgnored: boolean;\n  onClick: () => void;\n}> = ({ answer, index, isCorrect, isInCorrect, isIgnored, onClick }) => {\n  const letter = ['A', 'B', 'C', 'D'][index];\n\n  return (\n    <div\n      className={`answer-button${isCorrect ? ' --correct' : ''}${isInCorrect ? ' --incorrect' : ''}${isIgnored ? ' --ignored' : ''}`}\n      onClick={!isIgnored ? onClick : () => {}}\n    >\n      <span className=\"answer-index\">{letter}:</span> {answer}\n    </div>\n  );\n};\n","import React, { FunctionComponent } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { Dialog } from '@blueprintjs/core';\n\nimport { appSelectors } from '../../../../../app/app.selectors';\n\n\nexport const HelpDialog: FunctionComponent<{\n  isOpen: boolean;\n  onClose: () => void;\n  friendHelpShown: boolean;\n  audienceHelpShown: boolean;\n}> = ({ isOpen, onClose, friendHelpShown, audienceHelpShown }) => {\n  const friendHelp = useSelector(appSelectors.game.help.selectFriendHelp);\n  const audienceHelp = useSelector(appSelectors.game.help.selectAudienceHelp);\n\n  const answers = ['A', 'B', 'C', 'D'];\n\n  return (\n    <Dialog\n      className=\"help-dialog\"\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      {\n        friendHelp && !friendHelpShown ? (\n          <div className=\"help-response\">\n            Friend's answer is: \"{answers[friendHelp.suggestion]}\", with possibility {friendHelp.possibility}%\n          </div>\n        ) : null\n      }\n      {\n        audienceHelp && !audienceHelpShown ? (\n          <div className=\"help-response\">\n            Audience response is:\n            {\n              audienceHelp.suggestions.map((possibility: number, index: number) => (\n                <div className=\"answer-possibility\">{answers[index]}: {possibility}%</div>\n              ))\n            }\n          </div>\n        ) : null\n      }\n\n      <div className=\"default-button help-response-button\" onClick={onClose}>Ok</div>\n    </Dialog>\n  );\n};\n","import {\n  IStartGameAction,\n  IStoreCurrentGame,\n  IStoreCurrentQuestion,\n  IStoreCurrentQuestionOption,\n  ILoadGamesAction,\n  IGameState,\n  IStoreGamesAction,\n  IStoreQuestionsAction,\n  IStoreQuestionOptionsAction,\n  IAnswerQuestion,\n  IStoreMessage,\n  IGiveUpGame,\n} from './game.types';\nimport {\n  START_GAME,\n  STORE_CURRENT_GAME,\n  STORE_CURRENT_QUESTION,\n  STORE_CURRENT_QUESTION_OPTION,\n  LOAD_GAMES,\n  STORE_GAMES,\n  STORE_QUESTIONS,\n  STORE_QUESTION_OPTIONS,\n  ANSWER_QUESTION,\n  STORE_MESSAGE,\n  GIVE_UP_GAME,\n} from './game.constants';\n\n\nexport const loadGames = (): ILoadGamesAction => ({\n  type: LOAD_GAMES,\n});\n\nexport const storeGames = (games: IGameState['games']): IStoreGamesAction => ({\n  type: STORE_GAMES,\n  payload: games,\n});\n\nexport const storeQuestions = (questions: IGameState['questions']): IStoreQuestionsAction => ({\n  type: STORE_QUESTIONS,\n  payload: questions,\n});\n\nexport const storeQuestionOptions = (questionOptions: IGameState['questionOptions']): IStoreQuestionOptionsAction => ({\n  type: STORE_QUESTION_OPTIONS,\n  payload: questionOptions,\n});\n\nexport const startGame = (gameId: string): IStartGameAction => ({\n  type: START_GAME,\n  payload: gameId,\n});\n\nexport const storeCurrentGame = (gameId: string | null): IStoreCurrentGame => ({\n  type: STORE_CURRENT_GAME,\n  payload: gameId,\n});\n\nexport const answerQuestion = (answer: number): IAnswerQuestion => ({\n  type: ANSWER_QUESTION,\n  payload: answer,\n});\n\nexport const giveUpGame = (): IGiveUpGame => ({\n  type: GIVE_UP_GAME,\n});\n\nexport const storeCurrentQuestion = (currentQuestion: string | null): IStoreCurrentQuestion => ({\n  type: STORE_CURRENT_QUESTION,\n  payload: currentQuestion,\n});\n\nexport const storeCurrentQuestionOption = (currentQuestionOption: string | null): IStoreCurrentQuestionOption => ({\n  type: STORE_CURRENT_QUESTION_OPTION,\n  payload: currentQuestionOption,\n});\n\nexport const storeMessage = (message: string | null): IStoreMessage => ({\n  type: STORE_MESSAGE,\n  payload: message,\n});\n","export const LOAD_GAMES = 'LOAD_GAMES';\n\nexport const STORE_GAMES = 'STORE_GAMES';\nexport const STORE_QUESTIONS = 'STORE_QUESTIONS';\nexport const STORE_QUESTION_OPTIONS = 'STORE_QUESTION_OPTIONS';\n\nexport const START_GAME = 'START_GAME';\n\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION';\nexport const GIVE_UP_GAME = 'GIVE_UP_GAME';\n\nexport const STORE_CURRENT_GAME = 'STORE_CURRENT_GAME';\nexport const STORE_CURRENT_QUESTION = 'STORE_CURRENT_QUESTION';\nexport const STORE_CURRENT_QUESTION_OPTION = 'STORE_CURRENT_QUESTION_OPTION';\n\nexport const STORE_MESSAGE = 'STORE_MESSAGE';\n","import React, { useRef, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { AnswerButton } from './AnswerButton';\nimport { HelpDialog } from './HelpDialog';\n\nimport { answerQuestion } from '../../../../app/game/game.actions';\nimport { appSelectors } from '../../../../app/app.selectors';\n\n\nexport const Question = () => {\n  const dispatch = useDispatch();\n  const currentQuestionOption = useSelector(appSelectors.game.selectCurrentQuestionOption);\n\n  const currentAnswerIsCorrect = useSelector(appSelectors.game.answerFlags.selectCurrentAnswerIsCorrect);\n  const currentAnswerIsInCorrect = useSelector(appSelectors.game.answerFlags.selectCurrentAnswerIsInCorrect);\n  const currentAnswerIsIgnored = useSelector(appSelectors.game.answerFlags.selectCurrentAnswerIsIgnored);\n\n  const [helpDialogOpen, setHelpDialogOpen] = useState(false);\n  const friendHelpShown = useRef(false);\n  const audienceHelpShown = useRef(false);\n\n  const friendHelp = useSelector(appSelectors.game.help.selectFriendHelp);\n  const audienceHelp = useSelector(appSelectors.game.help.selectAudienceHelp);\n\n  const handleAnswer = useCallback(\n    (answer: number) => () => dispatch(answerQuestion(answer)),\n    [dispatch],\n  );\n  const handleCloseHelpDialog = useCallback(\n    () => {\n      setHelpDialogOpen(false);\n      if (friendHelp) {\n        friendHelpShown.current = true;\n      } else if (audienceHelp) {\n        audienceHelpShown.current = true;\n      }\n    },[setHelpDialogOpen, friendHelp, friendHelpShown, audienceHelp, audienceHelpShown],\n  );\n\n  useEffect(() => {\n    if (friendHelp && !friendHelpShown.current) {\n      setHelpDialogOpen(true);\n    } else if (audienceHelp && !audienceHelpShown.current) {\n      setHelpDialogOpen(true);\n    }\n  }, [friendHelp, audienceHelp, friendHelpShown, audienceHelpShown, setHelpDialogOpen]);\n\n  return currentQuestionOption ? (\n    <div className=\"question-form\">\n      <div className=\"question-text\">\n        {currentQuestionOption.text}\n      </div>\n      <div className=\"question-answers\">\n        {\n          currentQuestionOption.answers.map((answer, index) => (\n            <AnswerButton\n              key={`${currentQuestionOption.id}-aNo-${index}`}\n              onClick={handleAnswer(index)}\n              index={index}\n              isCorrect={index === currentAnswerIsCorrect}\n              isInCorrect={index === currentAnswerIsInCorrect}\n              isIgnored={!!currentAnswerIsIgnored && (index === currentAnswerIsIgnored[0] || index === currentAnswerIsIgnored[1])}\n              answer={answer}\n            />\n          ))\n        }\n      </div>\n      <HelpDialog\n        isOpen={helpDialogOpen}\n        onClose={handleCloseHelpDialog}\n        friendHelpShown={friendHelpShown.current}\n        audienceHelpShown={audienceHelpShown.current}\n      />\n    </div>\n  ) : null;\n};\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { IAppState } from '../../../../../app/app.types';\n\nimport { appSelectors } from '../../../../../app/app.selectors';\n\n\nexport const QuestionTreeEntry: FunctionComponent<{ questionId: string; index: number }> = ({ questionId, index }) => {\n  const currentQuestionId = useSelector(appSelectors.game.selectCurrentQuestionId);\n  const currentQuestion = useSelector((state: IAppState) => appSelectors.game.selectQuestionById(state, questionId));\n  const isActive = useMemo(() => currentQuestionId === questionId, [currentQuestionId, questionId]);\n  const isForSure = useMemo(() => index % 5 === 0, [index]);\n\n  return currentQuestionId ? (\n    <div className={`question-tree-entry${isActive ? ' --active' : ''}${isForSure ? ' --sure' : ''}`}>\n      <span className=\"question-tree-entry-index\">{index}.</span> {currentQuestion!.value}\n    </div>\n  ) : null;\n};\n","import React, { FunctionComponent, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { QuestionTreeEntry } from './QuestionTreeEntry';\n\nimport { appSelectors } from '../../../../app/app.selectors';\n\n\nexport const QuestionTree: FunctionComponent = () => {\n  const currentGame = useSelector(appSelectors.game.selectCurrentGame);\n  const reversedQuestion = useMemo(\n    () => currentGame && currentGame.questions.slice().reverse(),\n    [currentGame]\n  );\n\n  return currentGame ? (\n    <>\n      {\n        reversedQuestion!.map((questionId, index, arr) => (\n          <QuestionTreeEntry\n            key={questionId}\n            questionId={questionId}\n            index={arr.length - index}\n          />\n        ))\n      }\n    </>\n  ) : null;\n};\n","import {\n  IHelpState,\n  IStoreAudienceHelp,\n  IStoreFriendHelp,\n  IStoreHelpAudienceUsed,\n  IStoreHelpFriendUsed,\n  IStoreHelpHalfUsed,\n  IUseHelpAudience,\n  IUseHelpFriend,\n  IUseHelpHalf,\n} from './help.types';\nimport {\n  STORE_AUDIENCE_HELP,\n  STORE_FRIEND_HELP,\n  STORE_HELP_AUDIENCE_USED,\n  STORE_HELP_FRIEND_USED,\n  STORE_HELP_HALF_USED,\n  USE_HELP_AUDIENCE,\n  USE_HELP_FRIEND,\n  USE_HELP_HALF,\n} from './help.constants';\n\n\nexport const helpAudicence = (): IUseHelpAudience => ({\n  type: USE_HELP_AUDIENCE,\n});\n\nexport const helpFriend = (): IUseHelpFriend => ({\n  type: USE_HELP_FRIEND,\n});\n\nexport const helpHalf = (): IUseHelpHalf => ({\n  type: USE_HELP_HALF,\n});\n\nexport const storeHelpAudienceUsed = (used: boolean): IStoreHelpAudienceUsed => ({\n  type: STORE_HELP_AUDIENCE_USED,\n  payload: used,\n});\n\nexport const storeHelpFriendUsed = (used: boolean): IStoreHelpFriendUsed => ({\n  type: STORE_HELP_FRIEND_USED,\n  payload: used,\n});\n\nexport const storeHelpHalfUsed = (used: boolean): IStoreHelpHalfUsed => ({\n  type: STORE_HELP_HALF_USED,\n  payload: used,\n});\n\nexport const storeFriendHelp = (help: IHelpState['friendHelp'] | null): IStoreFriendHelp => ({\n  type: STORE_FRIEND_HELP,\n  payload: help,\n});\n\nexport const storeAudienceHelp = (help: IHelpState['audienceHelp'] | null): IStoreAudienceHelp => ({\n  type: STORE_AUDIENCE_HELP,\n  payload: help,\n});\n","export const USE_HELP_AUDIENCE = 'USE_HELP_AUDIENCE';\nexport const USE_HELP_FRIEND = 'USE_HELP_FRIEND';\nexport const USE_HELP_HALF = 'USE_HELP_HALF';\n\nexport const STORE_HELP_AUDIENCE_USED = 'STORE_HELP_AUDIENCE_USED';\nexport const STORE_HELP_FRIEND_USED = 'STORE_HELP_FRIEND_USED';\nexport const STORE_HELP_HALF_USED = 'STORE_HELP_HALF_USED';\n\nexport const STORE_FRIEND_HELP = 'STORE_FRIEND_HELP';\nexport const STORE_AUDIENCE_HELP = 'STORE_AUDIENCE_HELP';\n","import React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams, useHistory } from 'react-router';\n\nimport { Question } from './Question';\nimport { LogoImage } from '../../common/LogoImage';\nimport { QuestionTree } from './QuestionTree';\n\nimport { appSelectors } from '../../../app/app.selectors';\nimport { giveUpGame, startGame } from '../../../app/game/game.actions';\nimport { helpAudicence, helpFriend, helpHalf } from '../../../app/game/help/help.actions';\n\nimport phoneImage from './assets/images/phone.svg';\nimport peopleImage from './assets/images/people.svg';\nimport scaleImage from './assets/images/scale.svg';\n\nimport './assets/styles/index.css';\n\n\nexport const GamePage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { gameId } = useParams<{ gameId: string }>();\n\n  const currentGame = useSelector(appSelectors.game.selectCurrentGame);\n  const message = useSelector(appSelectors.game.selectMessage);\n\n  const helpAudienceUsed = useSelector(appSelectors.game.help.selectHelpAudienceUsed);\n  const helpFriendUsed = useSelector(appSelectors.game.help.selectHelpFriendUsed);\n  const helpHalfUsed = useSelector(appSelectors.game.help.selectHelpHalfUsed);\n\n  const handlePlayAgain = useCallback(\n    () => dispatch(startGame(gameId)),\n    [gameId, dispatch]\n  );\n  const handleGoBack = useCallback(\n    () => history.push('/'),\n    [history]\n  );\n\n  const handleGiveUp = useCallback(\n    () => dispatch(giveUpGame()),\n    [dispatch],\n  );\n\n  const handleHalfHelp = useCallback(\n    () => dispatch(helpHalf()),\n    [dispatch],\n  );\n\n  const handleFriendHelp = useCallback(\n    () => dispatch(helpFriend()),\n    [dispatch],\n  );\n\n  const handleAudienceHelp = useCallback(\n    () => dispatch(helpAudicence()),\n    [dispatch],\n  );\n\n  useEffect(() => {\n    if (gameId) {\n      dispatch(startGame(gameId));\n    }\n  }, [gameId, dispatch]);\n\n  return currentGame ? (\n    <div className=\"game-page\">\n      <div className=\"question-box\">\n        <LogoImage />\n        <Question />\n      </div>\n      <div className=\"question-tree\">\n        <div className=\"help-buttons\">\n          <div\n            className={`default-button help-button${helpHalfUsed ? ' --used' : ''}`}\n            onClick={handleHalfHelp}\n          >\n            <img src={scaleImage} alt=\"50:50\" />\n          </div>\n          <div\n            className={`default-button help-button${helpFriendUsed ? ' --used' : ''}`}\n            onClick={handleFriendHelp}\n          >\n            <img src={phoneImage} alt=\"Friend\" />\n          </div>\n          <div\n            className={`default-button help-button${helpAudienceUsed ? ' --used' : ''}`}\n            onClick={handleAudienceHelp}\n          >\n            <img src={peopleImage} alt=\"Audience\" />\n          </div>\n        </div>\n        <QuestionTree />\n        <div className=\"default-button give-up-button\" onClick={handleGiveUp}>Give Up</div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"game-finished-page\">\n      <LogoImage />\n      <div className=\"final-message\">{message}</div>\n      <div className=\"game-finished-buttons\">\n        <div className=\"default-button\" onClick={handleGoBack}>Back to Menu</div>\n        <div className=\"default-button\" onClick={handlePlayAgain}>Play Again!</div>\n      </div>\n    </div>\n  )\n};\n","import React, {useCallback} from 'react';\nimport { useHistory } from 'react-router';\n\nimport { LogoImage } from '../../common/LogoImage';\n\nimport './assets/styles/index.css';\n\n\nexport const NotFound = () => {\n  const history = useHistory();\n\n  const handleGoBack = useCallback(\n    () => history.push('/'),\n    [history]\n  );\n\n  return (\n    <div className=\"not-found-page\">\n      <LogoImage />\n      <div className=\"not-found-message\">Page You Are Looking For Doesn't Exist!</div>\n      <div className=\"default-button\" onClick={handleGoBack}>Back to Menu</div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\nimport { HomePage } from './pages/HomePage';\nimport { GamePage } from './pages/GamePage';\nimport { NotFound } from './pages/NotFound';\n\n\nexport const Router = () => (\n  <HashRouter>\n    <Switch>\n      <Route path=\"/game/:gameId\" component={GamePage} />\n      <Route path=\"/\" component={HomePage} exact={true} />\n      <Route path=\"\" component={NotFound} />\n    </Switch>\n  </HashRouter>\n);\n","import React, { FunctionComponent } from 'react';\n\nimport './assets/styles/reset.css';\nimport './assets/styles/vendor.css';\nimport './assets/styles/index.css';\n\nexport const Layout: FunctionComponent = ({ children }) => (\n  <div className=\"main-wrapper\">\n    {children}\n  </div>\n);\n","import { combineReducers, Reducer } from 'redux';\n\nimport { IAnswerFlagsActions, IAnswerFlagsState } from './answer-flags.types';\nimport {\n  STORE_CURRENT_ANSWER_IS_CORRECT,\n  STORE_CURRENT_ANSWER_IS_IGNORED,\n  STORE_CURRENT_ANSWER_IS_INCORRECT\n} from './answer-flags.constants';\n\n\nconst initialState: IAnswerFlagsState = {\n  currentAnswerIsCorrect: null,\n  currentAnswerIsInCorrect: null,\n  currentAnswerIsIgnored: null,\n};\n\nconst currentAnswerIsCorrectReducer: Reducer<\n  IAnswerFlagsState['currentAnswerIsCorrect'],\n  IAnswerFlagsActions\n> = (state = initialState.currentAnswerIsCorrect, action) => {\n  if (action.type === STORE_CURRENT_ANSWER_IS_CORRECT) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst currentAnswerIsInCorrectReducer: Reducer<\n  IAnswerFlagsState['currentAnswerIsInCorrect'],\n  IAnswerFlagsActions\n> = (state = initialState.currentAnswerIsInCorrect, action) => {\n  if (action.type === STORE_CURRENT_ANSWER_IS_INCORRECT) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst currentAnswerIsIgnoredReducer: Reducer<\n  IAnswerFlagsState['currentAnswerIsIgnored'],\n  IAnswerFlagsActions\n> = (state = initialState.currentAnswerIsIgnored, action) => {\n  if (action.type === STORE_CURRENT_ANSWER_IS_IGNORED) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport const answerFlagsReducer: Reducer<\n  IAnswerFlagsState,\n  IAnswerFlagsActions\n> = combineReducers({\n  currentAnswerIsCorrect: currentAnswerIsCorrectReducer,\n  currentAnswerIsInCorrect: currentAnswerIsInCorrectReducer,\n  currentAnswerIsIgnored: currentAnswerIsIgnoredReducer,\n});\n","export const STORE_CURRENT_ANSWER_IS_CORRECT = 'STORE_CURRENT_ANSWER_IS_CORRECT';\nexport const STORE_CURRENT_ANSWER_IS_INCORRECT = 'STORE_CURRENT_ANSWER_IS_INCORRECT';\nexport const STORE_CURRENT_ANSWER_IS_IGNORED = 'STORE_CURRENT_ANSWER_IS_IGNORED';\n","import { combineReducers, Reducer } from 'redux';\nimport { IHelpActions, IHelpState } from './help.types';\nimport {\n  STORE_AUDIENCE_HELP,\n  STORE_FRIEND_HELP,\n  STORE_HELP_AUDIENCE_USED,\n  STORE_HELP_FRIEND_USED,\n  STORE_HELP_HALF_USED\n} from './help.constants';\n\n\nconst initialState: IHelpState = {\n  helpAudienceUsed: false,\n  helpFriendUsed: false,\n  helpHalfUsed: false,\n  friendHelp: null,\n  audienceHelp: null,\n};\n\nconst helpAudienceUsedReducer: Reducer<\n  IHelpState['helpAudienceUsed'],\n  IHelpActions\n> = (state = initialState.helpAudienceUsed, action) => {\n  if (action.type === STORE_HELP_AUDIENCE_USED) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst helpFriendUsedReducer: Reducer<\n  IHelpState['helpFriendUsed'],\n  IHelpActions\n  > = (state = initialState.helpFriendUsed, action) => {\n  if (action.type === STORE_HELP_FRIEND_USED) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst helpHalfUsedReducer: Reducer<\n  IHelpState['helpHalfUsed'],\n  IHelpActions\n  > = (state = initialState.helpHalfUsed, action) => {\n  if (action.type === STORE_HELP_HALF_USED) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst friendHelpReducer: Reducer<\n  IHelpState['friendHelp'],\n  IHelpActions\n> = (state = initialState.friendHelp, action) => {\n  if (action.type === STORE_FRIEND_HELP) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst audienceHelpReducer: Reducer<\n  IHelpState['audienceHelp'],\n  IHelpActions\n> = (state = initialState.audienceHelp, action) => {\n  if (action.type === STORE_AUDIENCE_HELP) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nexport const helpReducer: Reducer<\n  IHelpState,\n  IHelpActions\n> = combineReducers({\n  helpAudienceUsed: helpAudienceUsedReducer,\n  helpFriendUsed: helpFriendUsedReducer,\n  helpHalfUsed: helpHalfUsedReducer,\n  friendHelp: friendHelpReducer,\n  audienceHelp: audienceHelpReducer,\n});\n","import { combineReducers, Reducer } from 'redux';\n\nimport { IGameActions, IGameState, IGameStatePure } from './game.types';\nimport {\n  STORE_CURRENT_GAME,\n  STORE_CURRENT_QUESTION,\n  STORE_CURRENT_QUESTION_OPTION,\n  STORE_GAMES, STORE_MESSAGE,\n  STORE_QUESTION_OPTIONS,\n  STORE_QUESTIONS\n} from './game.constants';\n\nimport { answerFlagsReducer } from './answer-flags/answer-flags.reducer';\nimport {helpReducer} from \"./help/help.reducer\";\n\n\nconst initialState: IGameStatePure = {\n  games: {},\n  questions: {},\n  questionOptions: {},\n  currentGame: null,\n  currentQuestion: null,\n  currentQuestionOption: null,\n  message: null,\n};\n\nconst gamesReducer: Reducer<\n  IGameState['games'],\n  IGameActions\n> = (state = initialState.games, action) => {\n  if (action.type === STORE_GAMES) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst questionsReducer: Reducer<\n  IGameState['questions'],\n  IGameActions\n> = (state = initialState.questions, action) => {\n  if (action.type === STORE_QUESTIONS) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst questionOptionsReducer: Reducer<\n  IGameState['questionOptions'],\n  IGameActions\n> = (state = initialState.questionOptions, action) => {\n  if (action.type === STORE_QUESTION_OPTIONS) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst currentGameReducer: Reducer<\n  IGameState['currentGame'],\n  IGameActions\n> = (state = initialState.currentGame, action) => {\n  if (action.type === STORE_CURRENT_GAME) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst currentQuestionReducer: Reducer<\n  IGameState['currentQuestion'],\n  IGameActions\n  > = (state = initialState.currentQuestion, action) => {\n  if (action.type === STORE_CURRENT_QUESTION) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst currentQuestionOptionReducer: Reducer<\n  IGameState['currentQuestionOption'],\n  IGameActions\n> = (state = initialState.currentQuestionOption, action) => {\n  if (action.type === STORE_CURRENT_QUESTION_OPTION) {\n    return action.payload;\n  }\n\n  return state;\n};\n\nconst messageReducer: Reducer<\n  IGameState['message'],\n  IGameActions\n> = (state = initialState.message, action) => {\n  if (action.type === STORE_MESSAGE) {\n    return action.payload;\n  }\n\n  return state;\n};\n\n\nexport const gameReducer: Reducer<\n  IGameState,\n  IGameActions\n> = combineReducers({\n  games: gamesReducer,\n  questions: questionsReducer,\n  questionOptions: questionOptionsReducer,\n  currentGame: currentGameReducer,\n  currentQuestion: currentQuestionReducer,\n  currentQuestionOption: currentQuestionOptionReducer,\n  message: messageReducer,\n  answerFlags: answerFlagsReducer,\n  help: helpReducer,\n});\n","import { combineReducers, Reducer } from 'redux';\n\nimport { IAppActions, IAppState } from './app.types';\n\nimport { gameReducer } from './game/game.reducer';\n\n\nexport const appReducer: Reducer<IAppState, IAppActions> = combineReducers({\n  game: gameReducer,\n});\n","import {\n  IStoreCurrentAnswerIsCorrect,\n  IStoreCurrentAnswerIsIgnored,\n  IStoreCurrentAnswerIsInCorrect\n} from './answer-flags.types';\nimport {\n  STORE_CURRENT_ANSWER_IS_CORRECT,\n  STORE_CURRENT_ANSWER_IS_IGNORED,\n  STORE_CURRENT_ANSWER_IS_INCORRECT\n} from './answer-flags.constants';\n\n\nexport const storeCurrentAnswerIsCorrect = (isCorrect: number | null): IStoreCurrentAnswerIsCorrect => ({\n  type: STORE_CURRENT_ANSWER_IS_CORRECT,\n  payload: isCorrect,\n});\n\nexport const storeCurrentAnswerIsInCorrect = (isInCorrect: number | null): IStoreCurrentAnswerIsInCorrect => ({\n  type: STORE_CURRENT_ANSWER_IS_INCORRECT,\n  payload: isInCorrect,\n});\n\nexport const storeCurrentAnswerIsIgnored = (isIgnored: [number, number] | null): IStoreCurrentAnswerIsIgnored => ({\n  type: STORE_CURRENT_ANSWER_IS_IGNORED,\n  payload: isIgnored,\n});\n","export const getRandomNumber = (maxNumber: number) =>\n  Math.floor(Math.random() * maxNumber);\n","import { getRandomNumber } from '../../common/common.utils';\n\n\nexport const getIgnoredAnswers = (answers: string[], correct: number): [number, number] => {\n  const pickFrom = answers.map((answer, index) => index).filter((index) => index !== correct);\n  const random = getRandomNumber(pickFrom.length);\n\n  return pickFrom.filter((i, index) => index !== random) as [number, number];\n};\n\nconst getPossibilityToHit = (questionIndex: number, areAnswersIgnored: boolean, possibilityList: number[]): number => {\n  const lower = Math.floor(questionIndex / 5);\n  const difference = possibilityList[lower + 1] - possibilityList[lower];\n  const qNumber = questionIndex % 5 + 1;\n\n  const basePossibility = possibilityList[lower] + (qNumber * difference) / 5;\n  const noise = (getRandomNumber(10) - 5) * (lower + 1);\n  const possibilityWithNoise = basePossibility + noise;\n  const possibility = possibilityWithNoise < 0 ? 1 : (possibilityWithNoise > 100 ? 100 : possibilityWithNoise);\n\n  return areAnswersIgnored ? Math.floor((possibility * 2 + 100) / 3) : possibility;\n};\n\nexport const getFriendPossibilityToHit = (\n  questionIndex: number,\n  areAnswersIgnored: boolean,\n  possibilities: [number, number, number, number, number]\n): number => {\n  return getPossibilityToHit(questionIndex, areAnswersIgnored, possibilities);\n};\n\nexport const getFriendSuggestion = (answers: number[], correct: number, possibility: number): number => {\n  if (Math.random() * 100 - possibility < 0 ) {\n    return correct;\n  } else {\n    const pickFrom = answers.filter((index) => index !== correct);\n    const random = getRandomNumber(pickFrom.length);\n\n    return pickFrom.find((i, index) => index === random)!;\n  }\n};\n\nexport const getAudiencePossibilityToHit = (\n  questionIndex: number,\n  areAnswersIgnored: boolean,\n  possibilities: [number, number, number, number, number]\n) => {\n  const correctPossibility = getPossibilityToHit(questionIndex, areAnswersIgnored, possibilities);\n  let remainingPossibility = 100 - correctPossibility;\n\n  const otherPossibilities = [];\n\n  if (!areAnswersIgnored) {\n    otherPossibilities.push(getRandomNumber(remainingPossibility + 1));\n    remainingPossibility -= otherPossibilities[0];\n    otherPossibilities.push(getRandomNumber(remainingPossibility + 1));\n    remainingPossibility -= otherPossibilities[1];\n  }\n\n  otherPossibilities.push(remainingPossibility);\n\n  // shuffle array\n  for (let i = otherPossibilities.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [otherPossibilities[i], otherPossibilities[j]] = [otherPossibilities[j], otherPossibilities[i]];\n  }\n\n  return {\n    correctPossibility,\n    otherPossibilities,\n  };\n};\n\nexport const getAudienceSuggestions = (\n  answers: number[],\n  correct: number,\n  possibilities: {\n    correctPossibility: number,\n    otherPossibilities: [number, number, number] | [number]\n  }\n) => {\n  const suggestions = [0, 0, 0, 0];\n  let otherPossibilityIndex = 0;\n\n  answers.forEach((answer: number) => {\n    suggestions[answer] = answer === correct ?\n      possibilities.correctPossibility :\n      possibilities.otherPossibilities[otherPossibilityIndex++]\n  });\n\n  return suggestions;\n};\n","import {\n  IGame,\n  IGameDataRaw,\n  IGameRaw,\n  IGameState,\n  IQuestion,\n  IQuestionOption,\n  IQuestionOptionRaw,\n  IQuestionRaw\n} from './game.types';\n\n\nconst DEFAULT_QUESTION_VALUES = [\n  '$100',\n  '$200',\n  '$300',\n  '$500',\n  '$1.000',\n  '$2.000',\n  '$4.000',\n  '$8.000',\n  '$16.000',\n  '$32.000',\n  '$64.000',\n  '$125.000',\n  '$250.000',\n  '$500.000',\n  '$1.000.000',\n];\n\nconst DEFAULT_FRIEND_POSSIBILITIES: [number, number, number, number, number] = [\n  100,\n  95,\n  60,\n  25,\n  0,\n];\n\nconst DEFAULT_AUDIENCE_POSSIBILITIES: [number, number, number, number, number] = [\n  100,\n  55,\n  35,\n  25,\n  0\n];\n\nexport const getGameIdByIndex = (gameIndex: number) =>\n  `gNo-${gameIndex}`;\n\nexport const getQuestionIdByIndex = (gameId: string, questionIndex: number) =>\n  `${gameId}-qNo-${questionIndex}`;\n\nexport const getQuestionIndexById = (questionId: string) => {\n  const questionIdMatch = questionId.match(/[0-9]+$/);\n\n  return questionIdMatch && +questionIdMatch[0];\n};\n\nexport const getQuestionOptionIdByIndex = (questionId: string, questionOptionIndex: number) =>\n  `${questionId}-${questionOptionIndex}`;\n\nexport const getLastSafeQuestionIndexFrom = (questionIndex: number) =>\n  questionIndex - (questionIndex % 5) - 1;\n\nexport const parseGameDataRaw = (gameDataRaw: IGameDataRaw): {\n  games: IGameState['games'];\n  questions: IGameState['questions'];\n  questionOptions: IGameState['questionOptions'];\n} => {\n  const games: IGameState['games'] = {};\n  const questions: IGameState['questions'] = {};\n  const questionOptions: IGameState['questionOptions'] = {};\n\n  gameDataRaw.games.forEach((gameRaw: IGameRaw, gameIndex) => {\n    const gameId = getGameIdByIndex(gameIndex);\n    const game: IGame = {\n      id: gameId,\n      name: gameRaw.name,\n      description: gameRaw.description,\n      questions: [],\n      friendPossibilities: gameRaw.friendPossibilities || DEFAULT_FRIEND_POSSIBILITIES,\n      audiencePossibilities: gameRaw.audiencePossibilities || DEFAULT_AUDIENCE_POSSIBILITIES,\n    };\n\n    gameRaw.questions.forEach((questionRaw: IQuestionRaw, questionIndex) => {\n      const questionId = getQuestionIdByIndex(gameId, questionIndex);\n      const question: IQuestion = {\n        id: questionId,\n        value: questionRaw.value || DEFAULT_QUESTION_VALUES[questionIndex] || `((questionId + 1) * 100)p`,\n        options: [],\n      };\n\n      questionRaw.options.forEach((questionOptionRaw: IQuestionOptionRaw, questionOptionIndex) => {\n        const questionOptionId = getQuestionOptionIdByIndex(questionId, questionOptionIndex);\n        const questionOption: IQuestionOption = {\n          id: questionOptionId,\n          text: questionOptionRaw.text,\n          answers: questionOptionRaw.answers,\n          correct: questionOptionRaw.correct,\n        };\n\n        question.options.push(questionOption.id);\n        questionOptions[questionOption.id] = questionOption;\n      });\n\n      game.questions.push(question.id);\n      questions[question.id] = question;\n    });\n\n    games[game.id] = game;\n  });\n\n  return {\n    games,\n    questions,\n    questionOptions,\n  };\n};\n","import { take, call, select, put } from 'redux-saga/effects';\nimport { USE_HELP_AUDIENCE, USE_HELP_FRIEND, USE_HELP_HALF } from './help.constants';\n\nimport { appSelectors } from '../../app.selectors';\n\nimport {\n  getAudiencePossibilityToHit, getAudienceSuggestions,\n  getFriendPossibilityToHit,\n  getFriendSuggestion,\n  getIgnoredAnswers\n} from './help.utils';\nimport { getQuestionIndexById } from '../game.utils';\n\nimport {\n  storeAudienceHelp,\n  storeFriendHelp,\n  storeHelpAudienceUsed,\n  storeHelpFriendUsed,\n  storeHelpHalfUsed\n} from './help.actions';\nimport { storeCurrentAnswerIsIgnored } from '../answer-flags/answer-flags.actions';\n\nimport { IQuestionOption } from '../game.types';\n\n\nfunction* getQuestionIndexAndAnswers(currentQuestionOption: IQuestionOption) {\n  const currentGame = yield select(appSelectors.game.selectCurrentGame);\n  const currentQuestionId = yield select(appSelectors.game.selectCurrentQuestionId);\n  const currentQuestionIndex = yield call(getQuestionIndexById, currentQuestionId);\n  const currentlyIgnoredAnswers = yield select(appSelectors.game.answerFlags.selectCurrentAnswerIsIgnored);\n  const answers = currentlyIgnoredAnswers ?\n    currentQuestionOption.answers.map(\n      (a: string, index: number) => index !== currentlyIgnoredAnswers[0] && index !== currentlyIgnoredAnswers[1] ? index : null\n    ).filter((index: number | null) => index !== null) :\n    currentQuestionOption.answers.map((answer: string, index: number) => index);\n\n  return {\n    currentQuestionIndex,\n    currentlyIgnoredAnswers,\n    answers,\n    currentGame,\n  };\n}\n\nfunction* useHelpHalf() {\n  const helpHalfIsUsed = yield select(appSelectors.game.help.selectHelpHalfUsed);\n  const currentQuestionOption = yield select(appSelectors.game.selectCurrentQuestionOption);\n\n  if (!helpHalfIsUsed && !!currentQuestionOption) {\n    const ignoredAnswers = yield call(getIgnoredAnswers, currentQuestionOption.answers, currentQuestionOption.correct);\n\n    yield put(storeHelpHalfUsed(true));\n    yield put(storeCurrentAnswerIsIgnored(ignoredAnswers));\n  }\n}\n\nfunction* useHelpFriend() {\n  const helpFriendIsUsed = yield select(appSelectors.game.help.selectHelpFriendUsed);\n  const currentQuestionOption = yield select(appSelectors.game.selectCurrentQuestionOption);\n\n  if (!helpFriendIsUsed && !!currentQuestionOption) {\n    const {\n      currentQuestionIndex,\n      currentlyIgnoredAnswers,\n      answers,\n      currentGame,\n    } = yield call(getQuestionIndexAndAnswers, currentQuestionOption);\n\n    const possibility = yield call(\n      getFriendPossibilityToHit,\n      currentQuestionIndex,\n      !!currentlyIgnoredAnswers,\n      currentGame.friendPossibilities,\n    );\n    const suggestion = yield call(getFriendSuggestion, answers, currentQuestionOption.correct, possibility);\n\n    yield put(storeHelpFriendUsed(true));\n    yield put(storeFriendHelp({ suggestion, possibility }));\n  }\n}\n\nfunction* useHelpAudience() {\n  const helpAudienceIsUsed = yield select(appSelectors.game.help.selectHelpAudienceUsed);\n  const currentQuestionOption = yield select(appSelectors.game.selectCurrentQuestionOption);\n\n  if (!helpAudienceIsUsed && !!currentQuestionOption) {\n    const {\n      currentQuestionIndex,\n      currentlyIgnoredAnswers,\n      answers,\n      currentGame,\n    } = yield call(getQuestionIndexAndAnswers, currentQuestionOption);\n\n    const possibilities = yield call(\n      getAudiencePossibilityToHit,\n      currentQuestionIndex,\n      !!currentlyIgnoredAnswers,\n      currentGame.audiencePossibilities\n    );\n    const suggestions = yield call(getAudienceSuggestions, answers, currentQuestionOption.correct, possibilities);\n\n    yield put(storeHelpAudienceUsed(true));\n    yield put(storeAudienceHelp({ suggestions }));\n  }\n}\n\nexport function* helpSaga() {\n  while (true) {\n    const action = yield take([USE_HELP_HALF, USE_HELP_FRIEND, USE_HELP_AUDIENCE]);\n\n    if (action.type === USE_HELP_HALF) {\n      yield call(useHelpHalf);\n    } else if (action.type === USE_HELP_FRIEND) {\n      yield call(useHelpFriend)\n    } else if (action.type === USE_HELP_AUDIENCE) {\n      yield call(useHelpAudience)\n    }\n  }\n}\n","import { take, call, put, select, delay, fork } from 'redux-saga/effects';\n\nimport { IGameDataRaw } from './game.types';\nimport { IAppState } from '../app.types';\nimport { ANSWER_QUESTION, GIVE_UP_GAME, LOAD_GAMES, START_GAME } from './game.constants';\nimport {\n  storeCurrentGame,\n  storeCurrentQuestion,\n  storeCurrentQuestionOption,\n  storeGames, storeMessage,\n  storeQuestionOptions,\n  storeQuestions\n} from './game.actions';\nimport {\n  storeCurrentAnswerIsCorrect,\n  storeCurrentAnswerIsIgnored,\n  storeCurrentAnswerIsInCorrect,\n} from './answer-flags/answer-flags.actions';\nimport {\n  storeAudienceHelp,\n  storeFriendHelp,\n  storeHelpAudienceUsed,\n  storeHelpFriendUsed,\n  storeHelpHalfUsed,\n} from './help/help.actions';\n\nimport { helpSaga } from './help/help.saga';\n\nimport { appSelectors } from '../app.selectors';\nimport {\n  getLastSafeQuestionIndexFrom,\n  getQuestionIdByIndex,\n  getQuestionIndexById,\n  getQuestionOptionIdByIndex,\n  parseGameDataRaw\n} from './game.utils';\nimport { getRandomNumber } from '../common/common.utils';\n\nimport data from '../../fixtures/games.json';\n\n\nfunction* loadGames() {\n  const { games, questions, questionOptions } = yield call(parseGameDataRaw, data as IGameDataRaw);\n\n  yield put(storeGames(games));\n  yield put(storeQuestions(questions));\n  yield put(storeQuestionOptions(questionOptions));\n}\n\nfunction* getRandomOptionId () {\n  const questionId = yield select(appSelectors.game.selectCurrentQuestionId);\n  const numberOfOptions = yield select(appSelectors.game.selectCurrentQuestionNumberOfOptions);\n  const questionOptionIndex = yield call(getRandomNumber, numberOfOptions);\n\n  return yield call(getQuestionOptionIdByIndex, questionId, questionOptionIndex);\n}\n\nfunction* startGame(gameId: string) {\n  yield put(storeMessage(null));\n  yield put(storeCurrentGame(gameId));\n\n  const questionId = yield call(getQuestionIdByIndex, gameId, 0);\n  yield put(storeCurrentQuestion(questionId));\n\n  const questionOptionId = yield call(getRandomOptionId);\n  yield put(storeCurrentQuestionOption(questionOptionId));\n}\n\nfunction* clearHelpInfo() {\n  yield put(storeCurrentAnswerIsIgnored(null));\n  yield put(storeFriendHelp(null));\n  yield put(storeAudienceHelp(null));\n}\n\nfunction* endGame() {\n  yield put(storeCurrentGame(null));\n  yield put(storeCurrentQuestion(null));\n  yield put(storeCurrentQuestionOption(null));\n\n  yield put(storeHelpAudienceUsed(false));\n  yield put(storeHelpFriendUsed(false));\n  yield put(storeHelpHalfUsed(false));\n\n  yield call(clearHelpInfo);\n}\n\nfunction* nextQuestion() {\n  const currentGameId = yield select(appSelectors.game.selectCurrentGameId);\n  const currentQuestionId = yield select(appSelectors.game.selectCurrentQuestionId);\n  const currentQuestionIndex = yield call(getQuestionIndexById, currentQuestionId);\n  const numberOfQuestions = yield select(appSelectors.game.selectCurrentGameNumberOfQuestions);\n\n  if (currentQuestionIndex <= numberOfQuestions - 2) {\n    yield call(clearHelpInfo);\n\n    const questionId = yield call(getQuestionIdByIndex, currentGameId, currentQuestionIndex + 1);\n    yield put(storeCurrentQuestion(questionId));\n\n    const questionOptionId = yield call(getRandomOptionId);\n    yield put(storeCurrentQuestionOption(questionOptionId));\n  } else {\n    yield put(storeMessage('Congratulations! You won the game!'));\n\n    yield endGame();\n  }\n}\n\nfunction* calculateWinningByQuestionIndex(safeQuestionIndex: number) {\n  let wonSum: string = '0';\n  if (safeQuestionIndex > -1) {\n    const currentGameId = yield select(appSelectors.game.selectCurrentGameId);\n    const safeQuestionId = yield call(getQuestionIdByIndex, currentGameId, safeQuestionIndex);\n    const safeQuestion = yield select((state: IAppState) => appSelectors.game.selectQuestionById(state, safeQuestionId));\n\n    wonSum = safeQuestion.value;\n  }\n\n  return wonSum;\n}\n\nfunction* answerQuestion(answer: number) {\n  const currentQuestionOption = yield select(appSelectors.game.selectCurrentQuestionOption);\n\n  if (currentQuestionOption.correct === answer) {\n    yield put(storeCurrentAnswerIsCorrect(answer));\n\n    yield delay(3000);\n    yield put(storeCurrentAnswerIsCorrect(null));\n\n    yield nextQuestion();\n  } else {\n    yield put(storeCurrentAnswerIsInCorrect(answer));\n\n    yield delay(3000);\n    yield put(storeCurrentAnswerIsInCorrect(null));\n\n    const currentQuestionId = yield select(appSelectors.game.selectCurrentQuestionId);\n    const questionIndex = yield call(getQuestionIndexById, currentQuestionId);\n    const lastSafeQuestionIndex = yield call(getLastSafeQuestionIndexFrom, questionIndex);\n\n    const wonSum: string = yield call(calculateWinningByQuestionIndex, lastSafeQuestionIndex);\n    yield put(storeMessage(\n      `Wrong answer! Correct answer was: \"${currentQuestionOption.answers[currentQuestionOption.correct]}\".\n      You won: ${wonSum}`\n    ));\n\n    yield endGame();\n  }\n}\n\nfunction* giveUpGame() {\n  const currentQuestionId = yield select(appSelectors.game.selectCurrentQuestionId);\n  const currentQuestionIndex = yield call(getQuestionIndexById, currentQuestionId);\n  const safeQuestionIndex = currentQuestionIndex - 1;\n\n  const wonSum: string = yield call(calculateWinningByQuestionIndex, safeQuestionIndex);\n  yield put(storeMessage(`Thank you for playing. You won: ${wonSum}`));\n  yield endGame();\n}\n\nexport function* gameSaga() {\n  yield take(LOAD_GAMES);\n  yield call(loadGames);\n\n  yield fork(helpSaga);\n  while (true) {\n    const action = yield take([START_GAME, ANSWER_QUESTION, GIVE_UP_GAME]);\n    if (action.type === START_GAME) {\n      yield call(startGame, action.payload);\n    } else if (action.type === ANSWER_QUESTION) {\n      yield call(answerQuestion, action.payload);\n    } else if (action.type === GIVE_UP_GAME) {\n      yield call(giveUpGame);\n    }\n  }\n}\n","import { fork, call, put } from 'redux-saga/effects';\n\nimport { gameSaga } from './game/game.saga';\n\nimport { loadGames } from './game/game.actions';\n\n\nfunction* initializeApp() {\n  yield put(loadGames());\n}\n\nexport function* appSaga() {\n  yield fork(gameSaga);\n\n  yield call(initializeApp)\n}\n","import { createStore as reduxCreateStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { appReducer } from './app.reducer';\nimport { appSaga } from './app.saga';\n\n\nexport const createStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = reduxCreateStore(appReducer, applyMiddleware(sagaMiddleware));\n\n  sagaMiddleware.run(appSaga);\n\n  return store;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { Router } from './Router';\nimport { Layout } from './Layout';\n\nimport { createStore } from '../app/store';\n\n\nexport const App = () => (\n  <Provider store={createStore()}>\n    <Layout>\n      <Router />\n    </Layout>\n  </Provider>\n);\n","module.exports = __webpack_public_path__ + \"static/media/logo.9de4364e.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.6e3b345b.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.f3ca33dd.svg\";","module.exports = __webpack_public_path__ + \"static/media/scale.84953973.svg\";"],"sourceRoot":""}